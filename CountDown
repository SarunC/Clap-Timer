#include<LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 12);

void setup(){
  pinMode(13, INPUT);
  pinMode(12, INPUT);
  pinMode(11, INPUT);
  lcd.init();
  lcd.backlight();
  lcd.setCursor(3, 0);
  lcd.print("Alarm Clock ");
  delay(3000);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Please set time");
}
int hour=0;
int min=0;
int sec=0;
int start=0;
int check=1;
void loop(){
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Set hour");
  delay(1000);
  while(1){
    if(digitalRead(11) == LOW){
      break;
    }
  	if(digitalRead(13)== LOW){
      hour++;
    }
  	else if(digitalRead(12)== LOW){
      hour--;
    }
    if (hour < 0){
      hour = 0;
    }
      delay(100);
      lcd.setCursor(10,0);
      lcd.print(hour);
      lcd.print(" h ");
      lcd.setCursor(0,1);
      lcd.print("Time:");
      lcd.print(hour);
      lcd.print("h");
   	  lcd.print(min);
      lcd.print("m");
      lcd.print(sec);
      lcd.print("s");
  }
  delay(100);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Set minute");
  while(1){
    if(digitalRead(11) == LOW){
      break;
    }
  	if(digitalRead(13)== LOW){
      min++;
    }
  	else if(digitalRead(12)== LOW){
      min--;
    }
    if (min < 0){
      min = 59;
    }
    if (min >= 60){
      min = 0;
    }
      delay(100);
      lcd.setCursor(12,0);
      lcd.print(min);
      lcd.print(" m ");
      lcd.setCursor(0,1);
      lcd.print("Time:");
      lcd.print(hour);
      lcd.print("h");
   	  lcd.print(min);
      lcd.print("m");
      lcd.print(sec);
      lcd.print("s");
  }
  delay(100);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Set second");
  while(1){
    if(digitalRead(11) == LOW){
      break;
    }
  	if(digitalRead(13)== LOW){
      sec++;
    }
  	else if(digitalRead(12)== LOW){
      sec--;
    }
    if (sec < 0){
      sec = 59;
    }
    if (sec >= 60){
      sec = 0;
    }
      delay(100);
      lcd.setCursor(12,0);
      lcd.print(sec);
      lcd.print(" s ");
      lcd.setCursor(0,1);
      lcd.print("Time:");
      lcd.print(hour);
      lcd.print("h");
   	  lcd.print(min);
      lcd.print("m");
      lcd.print(sec);
      lcd.print("s");
  }
  
  	lcd.clear();
      delay(200);
      lcd.setCursor(2,0);
      lcd.print(hour);
      lcd.print(" h ");
      lcd.print(min);
      lcd.print(" m ");
      lcd.print(sec);
      lcd.print(" s ");
      lcd.setCursor(4,1);
      lcd.print("Started !");
      delay(1000);
      lcd.clear();
      start=1;
      int status = 1;
      while(start!=0){
        delay(50);
        if(digitalRead(11) == LOW && status == 1){
        	status = 0;
            //lcd.setCursor(0,1);
            //lcd.print(status);
        }
        else if (digitalRead(11) == LOW && status == 0){
        	status = 1;
            //lcd.setCursor(0,1);
            //lcd.print(status);
        }
        else if(status == 1){
          if(hour==0 && min==0 && sec==0){
            start=1;
            break;
          }
          if(min!=0 && sec==0){
            min--;
            sec=60;
          }
          if(hour!=0 && min==0 && sec==0){
            hour--;
            min=59;
            sec=60;
          }
          sec--;
          delay(1000);
          lcd.clear();
          lcd.setCursor(2,0);
          lcd.print(hour);
          lcd.print(" h ");
          lcd.print(min);
          lcd.print(" m ");
          lcd.print(sec);
          lcd.print(" s "); 
        }
      }

      lcd.clear();
      delay(200);
      lcd.setCursor(2,0);
      lcd.print(hour);
      lcd.print(" h ");
      lcd.print(min);
      lcd.print(" m ");
      lcd.print(sec);
      lcd.print(" s ");
      lcd.setCursor(4,1);
      lcd.print("Alert !");
      digitalWrite(7,HIGH);
  	  while(digitalRead(11) != LOW){}
    
}
